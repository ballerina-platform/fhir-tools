#set($sqBrackets=[])
// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// AUTO-GENERATED FILE.
//
// This file is auto-generated by Ballerina.
// Developers are allowed to modify this file as per the requirement.

import ballerina/http;
#foreach($import in $service.getImportsList())
import $import.toLowerCase();
#end

# Generic type to wrap all implemented profiles.
# Add required profile types here.
# public type $service.getName() $basePackageImportIdentifier:$service.getName()|<other_$service.getName()_Profile>;
public type $service.getName() #**##foreach($profile in $service.getProfileList())$profile.getPackagePrefix():$profile.getName()#if($foreach.hasNext)|#end#end;

# initialize source system endpoint here

# A service representing a network-accessible API
# bound to port `9090`.
service / on new $servicePackageImportIdentifier:Listener(9090, apiConfig) {

    // Read the current state of single resource based on its id.
    isolated resource function get fhir/$service.getFhirVersion()/$service.getName()/[string id] ($basePackageImportIdentifier:FHIRContext fhirContext) returns $service.getName()|$basePackageImportIdentifier:OperationOutcome|$basePackageImportIdentifier:FHIRError {
        return $basePackageImportIdentifier:createFHIRError("Not implemented", $basePackageImportIdentifier:ERROR, $basePackageImportIdentifier:INFORMATIONAL, httpStatusCode = http:STATUS_NOT_IMPLEMENTED);
    }

    // Read the state of a specific version of a resource based on its id.
    isolated resource function get fhir/$service.getFhirVersion()/$service.getName()/[string id]/_history/[string vid] ($basePackageImportIdentifier:FHIRContext fhirContext) returns $service.getName()|$basePackageImportIdentifier:OperationOutcome|$basePackageImportIdentifier:FHIRError {
        return $basePackageImportIdentifier:createFHIRError("Not implemented", $basePackageImportIdentifier:ERROR, $basePackageImportIdentifier:INFORMATIONAL, httpStatusCode = http:STATUS_NOT_IMPLEMENTED);
    }

    // Search for resources based on a set of criteria.
    isolated resource function get fhir/$service.getFhirVersion()/$service.getName() ($basePackageImportIdentifier:FHIRContext fhirContext) returns $basePackageImportIdentifier:Bundle|$basePackageImportIdentifier:OperationOutcome|$basePackageImportIdentifier:FHIRError {
        return $basePackageImportIdentifier:createFHIRError("Not implemented", $basePackageImportIdentifier:ERROR, $basePackageImportIdentifier:INFORMATIONAL, httpStatusCode = http:STATUS_NOT_IMPLEMENTED);
    }

    // Create a new resource.
    isolated resource function post fhir/$service.getFhirVersion()/$service.getName() ($basePackageImportIdentifier:FHIRContext fhirContext, $service.getName() procedure) returns $service.getName()|$basePackageImportIdentifier:OperationOutcome|$basePackageImportIdentifier:FHIRError {
        return $basePackageImportIdentifier:createFHIRError("Not implemented", $basePackageImportIdentifier:ERROR, $basePackageImportIdentifier:INFORMATIONAL, httpStatusCode = http:STATUS_NOT_IMPLEMENTED);
    }

    // Update the current state of a resource completely.
    isolated resource function put fhir/$service.getFhirVersion()/$service.getName()/[string id] ($basePackageImportIdentifier:FHIRContext fhirContext, $service.getName() $service.getName().toLowerCase()) returns $service.getName()|$basePackageImportIdentifier:OperationOutcome|$basePackageImportIdentifier:FHIRError {
        return $basePackageImportIdentifier:createFHIRError("Not implemented", $basePackageImportIdentifier:ERROR, $basePackageImportIdentifier:INFORMATIONAL, httpStatusCode = http:STATUS_NOT_IMPLEMENTED);
    }

    // Update the current state of a resource partially.
    isolated resource function patch fhir/$service.getFhirVersion()/$service.getName()/[string id] ($basePackageImportIdentifier:FHIRContext fhirContext, json patch) returns $service.getName()|$basePackageImportIdentifier:OperationOutcome|$basePackageImportIdentifier:FHIRError {
        return $basePackageImportIdentifier:createFHIRError("Not implemented", $basePackageImportIdentifier:ERROR, $basePackageImportIdentifier:INFORMATIONAL, httpStatusCode = http:STATUS_NOT_IMPLEMENTED);
    }

    // Delete a resource.
    isolated resource function delete fhir/$service.getFhirVersion()/$service.getName()/[string id] ($basePackageImportIdentifier:FHIRContext fhirContext) returns $basePackageImportIdentifier:OperationOutcome|$basePackageImportIdentifier:FHIRError {
        return $basePackageImportIdentifier:createFHIRError("Not implemented", $basePackageImportIdentifier:ERROR, $basePackageImportIdentifier:INFORMATIONAL, httpStatusCode = http:STATUS_NOT_IMPLEMENTED);
    }

    // Retrieve the update history for a particular resource.
    isolated resource function get fhir/$service.getFhirVersion()/$service.getName()/[string id]/_history ($basePackageImportIdentifier:FHIRContext fhirContext) returns $basePackageImportIdentifier:Bundle|$basePackageImportIdentifier:OperationOutcome|$basePackageImportIdentifier:FHIRError {
        return $basePackageImportIdentifier:createFHIRError("Not implemented", $basePackageImportIdentifier:ERROR, $basePackageImportIdentifier:INFORMATIONAL, httpStatusCode = http:STATUS_NOT_IMPLEMENTED);
    }

    // Retrieve the update history for all resources.
    isolated resource function get fhir/$service.getFhirVersion()/$service.getName()/_history ($basePackageImportIdentifier:FHIRContext fhirContext) returns $basePackageImportIdentifier:Bundle|$basePackageImportIdentifier:OperationOutcome|$basePackageImportIdentifier:FHIRError {
        return $basePackageImportIdentifier:createFHIRError("Not implemented", $basePackageImportIdentifier:ERROR, $basePackageImportIdentifier:INFORMATIONAL, httpStatusCode = http:STATUS_NOT_IMPLEMENTED);
    }
}
